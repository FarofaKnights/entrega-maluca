//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Controls/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""UI"",
            ""id"": ""9c0641bc-1895-43f9-b8fa-4ec11c5ef3ae"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7ae98b6d-863d-4c7a-90b7-2f116eee3edc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""70cedce8-673f-4cc3-bf0f-18c0d692abc9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""cc1967fe-c30a-4873-8fea-e68eb79c3e31"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""87b97be1-27d2-4f4b-88e0-25fcf193bad9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8174520e-bd40-4f70-9c57-0a951cf0086f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d3a0bac9-143d-4754-a929-a35477a81eea"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""376e96a7-71d8-4dee-b130-6a0959f251af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""197fdfb1-d6b3-4bd8-85ff-9381cdc966bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""44289e21-3da7-43c0-9dda-6acd0eac33cb"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3c3dbb17-8342-4dec-9a03-a96ff95c7fa2"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""b7178c06-d3c8-4040-8fd5-67ca5dd06e24"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c04d0be4-8863-4697-93a7-14295aecf1f3"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c8f37325-ad15-4baa-8c5d-8b80e9ad8a19"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ec15cfeb-4bd2-4c8d-843c-2ddde37dcfa7"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c0edfcb8-3f80-4ab5-b2bf-8216224662b1"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ff63c7da-1f50-4b2e-aa24-6c57603404b2"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""960e4afe-86e5-49e0-9225-f2cb17c41c02"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d64f44d8-2e16-4541-936d-43bfad280947"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f150f3e1-015d-4264-a5b6-af3550de6fa4"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""875cc67a-7441-4c9c-b760-3f4ce540899d"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""47d287a4-83dc-4955-9c2f-98c16e255908"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""49b70799-8ad7-483d-a576-a1a46909d55b"",
                    ""path"": ""<Joystick>/stick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""187c199b-6385-4f78-9c4a-071a6b8158f3"",
                    ""path"": ""<Joystick>/stick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5ede7226-783c-43df-8b7f-6af581bae235"",
                    ""path"": ""<Joystick>/stick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""df546ab4-1240-4c5e-b3f0-81fde8321559"",
                    ""path"": ""<Joystick>/stick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""76e49973-0838-4761-b063-d28b693faf4e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1c612b1e-2a5b-4202-bff9-1f8215010f4c"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""77846270-3553-448c-b848-439085ebab5a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f35aaea-2868-4693-abfb-33e84e17250f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c89ebd87-2759-4630-8b00-698dcd3dd067"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e48dd7e9-5e8b-4b9f-8a7a-b09ad5cc9b06"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a11afc1f-8dc8-4a93-8d62-4682998bf4a7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0fe0ee59-b262-48da-bbad-42a1625c2682"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""15074b6f-dd04-4782-97b4-309a4337b2af"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""324ab6c8-ebd7-40eb-8e5e-4f65df3f66d3"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d36c9e5c-703f-4e85-a1b2-e8ed62bc2964"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse;Gamepad;Touch;Joystick;XR"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1ddafd5-5328-4861-a736-344c36b9ed98"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""552a55c7-b141-40c4-bf42-64c944b3a76c"",
                    ""path"": ""<Pen>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc97314b-b94e-4c0b-9fdc-ad4d13780977"",
                    ""path"": ""<Touchscreen>/touch*/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d44d8a0-4de2-444a-8232-02b2a451e5dc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c9b2815-b20f-4f95-b37e-57c4c89371c6"",
                    ""path"": ""<Pen>/tip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""715ca1ea-e9d0-497f-be80-092585d5c839"",
                    ""path"": ""<Touchscreen>/touch*/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Touch"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bfeeeed5-fc34-4598-b0d0-8f0b34b6133c"",
                    ""path"": ""<XRController>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5519c6a4-0448-4f87-aa11-9e313f58f64f"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0f79590a-26c8-42c4-af12-76b0de6765cb"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e91e7d4b-9340-41a6-894d-4286fd7132aa"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8e7d7e3-154c-4835-a3db-9ce4006cf1ee"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca180f3-b19c-4e56-b115-a6eff6ca77e4"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Game"",
            ""id"": ""966ba50a-6959-4cfd-a6c7-cdb86731085a"",
            ""actions"": [
                {
                    ""name"": ""Recuperar"",
                    ""type"": ""Button"",
                    ""id"": ""cb1b88dd-b2d6-41d3-aa31-7f3d3cb88a44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EfetuarAcao"",
                    ""type"": ""Button"",
                    ""id"": ""3406ca2a-f685-415e-830a-7f75ccc3575b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausar"",
                    ""type"": ""Button"",
                    ""id"": ""243774e9-a366-4010-99cf-ff5e523a87b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowDebug"",
                    ""type"": ""Button"",
                    ""id"": ""3f131102-309b-4438-9f41-e798c9ba383e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShowList"",
                    ""type"": ""Button"",
                    ""id"": ""abe5e12f-20f7-496d-8c28-fc832a575c71"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""81388e82-e1dc-4bd8-975c-0105a31f9e53"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Recuperar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b9fe409-9335-4e4c-af07-1286504d4d1d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EfetuarAcao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""885bedee-1779-41ac-8cc2-088aa859c3f1"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EfetuarAcao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8cd48d9d-8b00-4026-b1fd-200a09b9553c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50c34682-cc1c-481c-9a06-6c32e662c1ea"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowDebug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""748bc7ad-5575-487f-ac8c-6488a97d5ac8"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShowList"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Encaixe"",
            ""id"": ""96e5f97e-f22f-4911-a8a6-134281066283"",
            ""actions"": [
                {
                    ""name"": ""Rotacionar"",
                    ""type"": ""Button"",
                    ""id"": ""31a94cba-5ec9-4002-8a7d-a82fff8d66b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Subir"",
                    ""type"": ""Button"",
                    ""id"": ""698f6e11-1168-4aa8-a292-58976d9b39fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Resetar"",
                    ""type"": ""Button"",
                    ""id"": ""38215ecf-8a23-420c-8135-9068c99df250"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mover"",
                    ""type"": ""Value"",
                    ""id"": ""0a90c0ef-6a96-46bb-b091-9f03f5001d54"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Selecionar"",
                    ""type"": ""Value"",
                    ""id"": ""332ac602-76e8-4dff-bc58-632a87b89e63"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""EfetuarAcao"",
                    ""type"": ""Button"",
                    ""id"": ""1355be9c-1966-482b-9635-71908bf086f2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e5685741-3543-4443-bb50-4a759ed7a639"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotacionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc666762-cf87-473a-840e-88a9a96cc2f1"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Subir"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d7e7f529-0f03-4dca-9069-c619ffca3d5f"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Resetar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Teclado"",
                    ""id"": ""7f9bcf16-474d-4c97-b469-ac9511247547"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""71b76105-51ce-4f40-a178-a843a634431d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""20613090-c463-489f-85c1-acc1febeb031"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""905e4b90-5770-4e23-aa6b-85b2500d6c10"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""26ab8662-e80c-49f5-9f03-182ccc5f3551"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mover"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Teclado"",
                    ""id"": ""525174eb-4a96-474f-9bfc-3cb910416371"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Selecionar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5acdd87f-a3cf-413a-aa23-586e52fe8716"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Selecionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8bee9d53-37a2-43f8-8012-642f44f7d325"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Selecionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""c0133e04-f5b4-406e-a9c5-92e33489dce7"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Selecionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4cce009e-0aa9-4f11-88e3-938212da62c2"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Selecionar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8ee49bdd-e6ef-4d05-96b5-b0b81858bd93"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EfetuarAcao"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Oficina"",
            ""id"": ""40ff083a-bd06-45d7-a680-1a75b0d9c29c"",
            ""actions"": [
                {
                    ""name"": ""Girar"",
                    ""type"": ""Value"",
                    ""id"": ""6329de53-19e3-4278-b93f-c483193efe08"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c0ca4e00-4190-48bf-9d89-209b05df0163"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3cd17043-ef38-4264-b117-20247c28cc12"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e77fc1d1-4093-4b9f-87c0-2343040e4e05"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Girar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Cheat"",
            ""id"": ""429c3a5d-fe9b-4cee-a1b5-7cecd1c093ea"",
            ""actions"": [
                {
                    ""name"": ""TP"",
                    ""type"": ""Button"",
                    ""id"": ""0ded4ba5-bd53-49da-8c23-9284f211184f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sair"",
                    ""type"": ""Button"",
                    ""id"": ""1dd8b713-070c-4218-b0ce-f6b33522723a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dinheiro"",
                    ""type"": ""Button"",
                    ""id"": ""795f2aba-b384-4288-ad82-8734ba2ee6ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""aa062b12-383c-44a6-8cca-9ba676889637"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3785b6f0-e8a2-489d-95e4-19ef6b00bef5"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sair"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b466d351-454a-43a8-b43d-18fe80cb07e2"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dinheiro"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_Recuperar = m_Game.FindAction("Recuperar", throwIfNotFound: true);
        m_Game_EfetuarAcao = m_Game.FindAction("EfetuarAcao", throwIfNotFound: true);
        m_Game_Pausar = m_Game.FindAction("Pausar", throwIfNotFound: true);
        m_Game_ShowDebug = m_Game.FindAction("ShowDebug", throwIfNotFound: true);
        m_Game_ShowList = m_Game.FindAction("ShowList", throwIfNotFound: true);
        // Encaixe
        m_Encaixe = asset.FindActionMap("Encaixe", throwIfNotFound: true);
        m_Encaixe_Rotacionar = m_Encaixe.FindAction("Rotacionar", throwIfNotFound: true);
        m_Encaixe_Subir = m_Encaixe.FindAction("Subir", throwIfNotFound: true);
        m_Encaixe_Resetar = m_Encaixe.FindAction("Resetar", throwIfNotFound: true);
        m_Encaixe_Mover = m_Encaixe.FindAction("Mover", throwIfNotFound: true);
        m_Encaixe_Selecionar = m_Encaixe.FindAction("Selecionar", throwIfNotFound: true);
        m_Encaixe_EfetuarAcao = m_Encaixe.FindAction("EfetuarAcao", throwIfNotFound: true);
        // Oficina
        m_Oficina = asset.FindActionMap("Oficina", throwIfNotFound: true);
        m_Oficina_Girar = m_Oficina.FindAction("Girar", throwIfNotFound: true);
        // Cheat
        m_Cheat = asset.FindActionMap("Cheat", throwIfNotFound: true);
        m_Cheat_TP = m_Cheat.FindAction("TP", throwIfNotFound: true);
        m_Cheat_Sair = m_Cheat.FindAction("Sair", throwIfNotFound: true);
        m_Cheat_Dinheiro = m_Cheat.FindAction("Dinheiro", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Navigate.started += instance.OnNavigate;
            @Navigate.performed += instance.OnNavigate;
            @Navigate.canceled += instance.OnNavigate;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @ScrollWheel.started += instance.OnScrollWheel;
            @ScrollWheel.performed += instance.OnScrollWheel;
            @ScrollWheel.canceled += instance.OnScrollWheel;
            @MiddleClick.started += instance.OnMiddleClick;
            @MiddleClick.performed += instance.OnMiddleClick;
            @MiddleClick.canceled += instance.OnMiddleClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Navigate.started -= instance.OnNavigate;
            @Navigate.performed -= instance.OnNavigate;
            @Navigate.canceled -= instance.OnNavigate;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @ScrollWheel.started -= instance.OnScrollWheel;
            @ScrollWheel.performed -= instance.OnScrollWheel;
            @ScrollWheel.canceled -= instance.OnScrollWheel;
            @MiddleClick.started -= instance.OnMiddleClick;
            @MiddleClick.performed -= instance.OnMiddleClick;
            @MiddleClick.canceled -= instance.OnMiddleClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Game
    private readonly InputActionMap m_Game;
    private List<IGameActions> m_GameActionsCallbackInterfaces = new List<IGameActions>();
    private readonly InputAction m_Game_Recuperar;
    private readonly InputAction m_Game_EfetuarAcao;
    private readonly InputAction m_Game_Pausar;
    private readonly InputAction m_Game_ShowDebug;
    private readonly InputAction m_Game_ShowList;
    public struct GameActions
    {
        private @Controls m_Wrapper;
        public GameActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Recuperar => m_Wrapper.m_Game_Recuperar;
        public InputAction @EfetuarAcao => m_Wrapper.m_Game_EfetuarAcao;
        public InputAction @Pausar => m_Wrapper.m_Game_Pausar;
        public InputAction @ShowDebug => m_Wrapper.m_Game_ShowDebug;
        public InputAction @ShowList => m_Wrapper.m_Game_ShowList;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void AddCallbacks(IGameActions instance)
        {
            if (instance == null || m_Wrapper.m_GameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameActionsCallbackInterfaces.Add(instance);
            @Recuperar.started += instance.OnRecuperar;
            @Recuperar.performed += instance.OnRecuperar;
            @Recuperar.canceled += instance.OnRecuperar;
            @EfetuarAcao.started += instance.OnEfetuarAcao;
            @EfetuarAcao.performed += instance.OnEfetuarAcao;
            @EfetuarAcao.canceled += instance.OnEfetuarAcao;
            @Pausar.started += instance.OnPausar;
            @Pausar.performed += instance.OnPausar;
            @Pausar.canceled += instance.OnPausar;
            @ShowDebug.started += instance.OnShowDebug;
            @ShowDebug.performed += instance.OnShowDebug;
            @ShowDebug.canceled += instance.OnShowDebug;
            @ShowList.started += instance.OnShowList;
            @ShowList.performed += instance.OnShowList;
            @ShowList.canceled += instance.OnShowList;
        }

        private void UnregisterCallbacks(IGameActions instance)
        {
            @Recuperar.started -= instance.OnRecuperar;
            @Recuperar.performed -= instance.OnRecuperar;
            @Recuperar.canceled -= instance.OnRecuperar;
            @EfetuarAcao.started -= instance.OnEfetuarAcao;
            @EfetuarAcao.performed -= instance.OnEfetuarAcao;
            @EfetuarAcao.canceled -= instance.OnEfetuarAcao;
            @Pausar.started -= instance.OnPausar;
            @Pausar.performed -= instance.OnPausar;
            @Pausar.canceled -= instance.OnPausar;
            @ShowDebug.started -= instance.OnShowDebug;
            @ShowDebug.performed -= instance.OnShowDebug;
            @ShowDebug.canceled -= instance.OnShowDebug;
            @ShowList.started -= instance.OnShowList;
            @ShowList.performed -= instance.OnShowList;
            @ShowList.canceled -= instance.OnShowList;
        }

        public void RemoveCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameActions instance)
        {
            foreach (var item in m_Wrapper.m_GameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameActions @Game => new GameActions(this);

    // Encaixe
    private readonly InputActionMap m_Encaixe;
    private List<IEncaixeActions> m_EncaixeActionsCallbackInterfaces = new List<IEncaixeActions>();
    private readonly InputAction m_Encaixe_Rotacionar;
    private readonly InputAction m_Encaixe_Subir;
    private readonly InputAction m_Encaixe_Resetar;
    private readonly InputAction m_Encaixe_Mover;
    private readonly InputAction m_Encaixe_Selecionar;
    private readonly InputAction m_Encaixe_EfetuarAcao;
    public struct EncaixeActions
    {
        private @Controls m_Wrapper;
        public EncaixeActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotacionar => m_Wrapper.m_Encaixe_Rotacionar;
        public InputAction @Subir => m_Wrapper.m_Encaixe_Subir;
        public InputAction @Resetar => m_Wrapper.m_Encaixe_Resetar;
        public InputAction @Mover => m_Wrapper.m_Encaixe_Mover;
        public InputAction @Selecionar => m_Wrapper.m_Encaixe_Selecionar;
        public InputAction @EfetuarAcao => m_Wrapper.m_Encaixe_EfetuarAcao;
        public InputActionMap Get() { return m_Wrapper.m_Encaixe; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EncaixeActions set) { return set.Get(); }
        public void AddCallbacks(IEncaixeActions instance)
        {
            if (instance == null || m_Wrapper.m_EncaixeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_EncaixeActionsCallbackInterfaces.Add(instance);
            @Rotacionar.started += instance.OnRotacionar;
            @Rotacionar.performed += instance.OnRotacionar;
            @Rotacionar.canceled += instance.OnRotacionar;
            @Subir.started += instance.OnSubir;
            @Subir.performed += instance.OnSubir;
            @Subir.canceled += instance.OnSubir;
            @Resetar.started += instance.OnResetar;
            @Resetar.performed += instance.OnResetar;
            @Resetar.canceled += instance.OnResetar;
            @Mover.started += instance.OnMover;
            @Mover.performed += instance.OnMover;
            @Mover.canceled += instance.OnMover;
            @Selecionar.started += instance.OnSelecionar;
            @Selecionar.performed += instance.OnSelecionar;
            @Selecionar.canceled += instance.OnSelecionar;
            @EfetuarAcao.started += instance.OnEfetuarAcao;
            @EfetuarAcao.performed += instance.OnEfetuarAcao;
            @EfetuarAcao.canceled += instance.OnEfetuarAcao;
        }

        private void UnregisterCallbacks(IEncaixeActions instance)
        {
            @Rotacionar.started -= instance.OnRotacionar;
            @Rotacionar.performed -= instance.OnRotacionar;
            @Rotacionar.canceled -= instance.OnRotacionar;
            @Subir.started -= instance.OnSubir;
            @Subir.performed -= instance.OnSubir;
            @Subir.canceled -= instance.OnSubir;
            @Resetar.started -= instance.OnResetar;
            @Resetar.performed -= instance.OnResetar;
            @Resetar.canceled -= instance.OnResetar;
            @Mover.started -= instance.OnMover;
            @Mover.performed -= instance.OnMover;
            @Mover.canceled -= instance.OnMover;
            @Selecionar.started -= instance.OnSelecionar;
            @Selecionar.performed -= instance.OnSelecionar;
            @Selecionar.canceled -= instance.OnSelecionar;
            @EfetuarAcao.started -= instance.OnEfetuarAcao;
            @EfetuarAcao.performed -= instance.OnEfetuarAcao;
            @EfetuarAcao.canceled -= instance.OnEfetuarAcao;
        }

        public void RemoveCallbacks(IEncaixeActions instance)
        {
            if (m_Wrapper.m_EncaixeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IEncaixeActions instance)
        {
            foreach (var item in m_Wrapper.m_EncaixeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_EncaixeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public EncaixeActions @Encaixe => new EncaixeActions(this);

    // Oficina
    private readonly InputActionMap m_Oficina;
    private List<IOficinaActions> m_OficinaActionsCallbackInterfaces = new List<IOficinaActions>();
    private readonly InputAction m_Oficina_Girar;
    public struct OficinaActions
    {
        private @Controls m_Wrapper;
        public OficinaActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Girar => m_Wrapper.m_Oficina_Girar;
        public InputActionMap Get() { return m_Wrapper.m_Oficina; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OficinaActions set) { return set.Get(); }
        public void AddCallbacks(IOficinaActions instance)
        {
            if (instance == null || m_Wrapper.m_OficinaActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_OficinaActionsCallbackInterfaces.Add(instance);
            @Girar.started += instance.OnGirar;
            @Girar.performed += instance.OnGirar;
            @Girar.canceled += instance.OnGirar;
        }

        private void UnregisterCallbacks(IOficinaActions instance)
        {
            @Girar.started -= instance.OnGirar;
            @Girar.performed -= instance.OnGirar;
            @Girar.canceled -= instance.OnGirar;
        }

        public void RemoveCallbacks(IOficinaActions instance)
        {
            if (m_Wrapper.m_OficinaActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IOficinaActions instance)
        {
            foreach (var item in m_Wrapper.m_OficinaActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_OficinaActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public OficinaActions @Oficina => new OficinaActions(this);

    // Cheat
    private readonly InputActionMap m_Cheat;
    private List<ICheatActions> m_CheatActionsCallbackInterfaces = new List<ICheatActions>();
    private readonly InputAction m_Cheat_TP;
    private readonly InputAction m_Cheat_Sair;
    private readonly InputAction m_Cheat_Dinheiro;
    public struct CheatActions
    {
        private @Controls m_Wrapper;
        public CheatActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @TP => m_Wrapper.m_Cheat_TP;
        public InputAction @Sair => m_Wrapper.m_Cheat_Sair;
        public InputAction @Dinheiro => m_Wrapper.m_Cheat_Dinheiro;
        public InputActionMap Get() { return m_Wrapper.m_Cheat; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CheatActions set) { return set.Get(); }
        public void AddCallbacks(ICheatActions instance)
        {
            if (instance == null || m_Wrapper.m_CheatActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CheatActionsCallbackInterfaces.Add(instance);
            @TP.started += instance.OnTP;
            @TP.performed += instance.OnTP;
            @TP.canceled += instance.OnTP;
            @Sair.started += instance.OnSair;
            @Sair.performed += instance.OnSair;
            @Sair.canceled += instance.OnSair;
            @Dinheiro.started += instance.OnDinheiro;
            @Dinheiro.performed += instance.OnDinheiro;
            @Dinheiro.canceled += instance.OnDinheiro;
        }

        private void UnregisterCallbacks(ICheatActions instance)
        {
            @TP.started -= instance.OnTP;
            @TP.performed -= instance.OnTP;
            @TP.canceled -= instance.OnTP;
            @Sair.started -= instance.OnSair;
            @Sair.performed -= instance.OnSair;
            @Sair.canceled -= instance.OnSair;
            @Dinheiro.started -= instance.OnDinheiro;
            @Dinheiro.performed -= instance.OnDinheiro;
            @Dinheiro.canceled -= instance.OnDinheiro;
        }

        public void RemoveCallbacks(ICheatActions instance)
        {
            if (m_Wrapper.m_CheatActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICheatActions instance)
        {
            foreach (var item in m_Wrapper.m_CheatActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CheatActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CheatActions @Cheat => new CheatActions(this);
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IGameActions
    {
        void OnRecuperar(InputAction.CallbackContext context);
        void OnEfetuarAcao(InputAction.CallbackContext context);
        void OnPausar(InputAction.CallbackContext context);
        void OnShowDebug(InputAction.CallbackContext context);
        void OnShowList(InputAction.CallbackContext context);
    }
    public interface IEncaixeActions
    {
        void OnRotacionar(InputAction.CallbackContext context);
        void OnSubir(InputAction.CallbackContext context);
        void OnResetar(InputAction.CallbackContext context);
        void OnMover(InputAction.CallbackContext context);
        void OnSelecionar(InputAction.CallbackContext context);
        void OnEfetuarAcao(InputAction.CallbackContext context);
    }
    public interface IOficinaActions
    {
        void OnGirar(InputAction.CallbackContext context);
    }
    public interface ICheatActions
    {
        void OnTP(InputAction.CallbackContext context);
        void OnSair(InputAction.CallbackContext context);
        void OnDinheiro(InputAction.CallbackContext context);
    }
}
